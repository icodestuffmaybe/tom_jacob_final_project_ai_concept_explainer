#!/usr/bin/env python3
"""
Simple test script to verify the backend setup is working.
"""

def test_imports():
    """Test that all required modules can be imported."""
    try:
        print("Testing imports...")
        
        # Test FastAPI
        import fastapi
        print("‚úì FastAPI imported successfully")
        
        # Test SQLAlchemy
        import sqlalchemy
        print(f"‚úì SQLAlchemy imported successfully (version: {sqlalchemy.__version__})")
        
        # Test Uvicorn
        import uvicorn
        print("‚úì Uvicorn imported successfully")
        
        # Test our app modules
        import sys
        import os
        sys.path.append(os.path.dirname(os.path.abspath(__file__)))
        
        from app.database.database import Base, engine
        print("‚úì Database modules imported successfully")
        
        from app.models.models import Student, Concept
        print("‚úì Models imported successfully")
        
        from app.core.config import settings
        print("‚úì Config imported successfully")
        
        print("\n‚úÖ All imports successful! Backend setup is working.")
        return True
        
    except ImportError as e:
        print(f"‚ùå Import error: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Unexpected error: {e}")
        return False

def test_database():
    """Test database creation."""
    try:
        print("\nTesting database setup...")
        from app.database.database import engine
        from app.models.models import Base
        
        # Create tables
        Base.metadata.create_all(bind=engine)
        print("‚úì Database tables created successfully")
        
        return True
    except Exception as e:
        print(f"‚ùå Database error: {e}")
        return False

def test_optional_apis():
    """Test if optional API keys are configured."""
    print("\nChecking API configuration...")
    from app.core.config import settings
    
    if settings.GEMINI_API_KEY:
        print("‚úì Gemini API key is configured")
    else:
        print("‚ö†Ô∏è Gemini API key not configured (explanations will use fallback)")
        print("   Set GEMINI_API_KEY in your .env file for full functionality")
    
    return True

if __name__ == "__main__":
    print("AI Concept Explainer - Backend Setup Test")
    print("=" * 50)
    
    success = True
    success &= test_imports()
    success &= test_database() 
    success &= test_optional_apis()
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ Backend setup test PASSED!")
        print("You can now run: python -m uvicorn app.main:app --reload")
    else:
        print("‚ùå Backend setup test FAILED!")
        print("Please fix the errors above before running the server.")